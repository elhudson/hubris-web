import {Weapons} from "./inventory"
import {HD, Health, Characters} from "./character"
import {Powers} from "./powers"

model Tags {
  id             String         @id @unique
  title          String         @db.MediumText
  description    String         @db.MediumText
  effects        Effects[]
  classes        Classes[]
  tag_features   Tag_Features[]
  damage_types   Damage_Types?
  damage_typesId String?
}

model Hit_Dice {
  id      String    @id @unique
  title   String
  cost    Int       @default(1)
  classes Classes[]
  HD      HD[]
}

model Damage_Types {
  id          String @id @unique
  title       String @db.MediumText
  description String @db.MediumText

  tags           Tags?            @relation(fields: [tagsId], references: [id])
  effects        Effects[]
  class_features Class_Features[]
  tag_features   Tag_Features[]
  tagsId         String?          @unique
  weapons        Weapons[]
}

model Tag_Features {
  id           String         @id @unique
  title        String
  description  String         @db.MediumText
  ticks        Int?
  tier         Int
  xp           Int
  tags         Tags?          @relation(fields: [tagsId], references: [id])
  tagsId       String?
  requires     Tag_Features[] @relation("tag_features_prq")
  required_for Tag_Features[] @relation("tag_features_prq")
  damage_types Damage_Types[]
  Characters   Characters[]
  charactersId String?
}

model Effects {
  id           String         @id @unique
  title        String?
  description  String         @db.MediumText
  power        Float
  xp           Int
  tier         Int
  requires     Effects[]      @relation("effects_prq")
  required_for Effects[]      @relation("effects_prq")
  tags         Tags[]
  damage_types Damage_Types[]
  trees        Trees?         @relation(fields: [treesId], references: [id])
  treesId      String?
  Characters   Characters[]
  charactersId String?
  Powers       Powers[]
}



model Trees {
  id          String      @id @unique
  title       String?
  description String      @db.MediumText
  effects     Effects[]
  ranges      Ranges[]
  durations   Durations[]
}

model Durations {
  id           String       @id @unique
  title        String?
  description  String       @db.MediumText
  power        Float
  xp           Int
  tier         Int
  ticks        Int?
  requires     Durations[]  @relation("durations_prq")
  required_for Durations[]  @relation("durations_prq")
  trees        Trees[]
  Characters   Characters[]
  charactersId String?
  Powers       Powers[]
}



model Ranges {
  id           String       @id @unique
  title        String?
  description  String       @db.MediumText
  power        Float
  xp           Int
  tier         Int
  requires     Ranges[]     @relation("ranges_prq")
  required_for Ranges[]     @relation("ranges_prq")
  trees        Trees[]
  Characters   Characters[]
  charactersId String?
  Powers       Powers[]
}



model Classes {
  id             String           @id @unique
  title          String?
  description    String           @db.MediumText
  weaponry       String
  armory         String           @default("None")
  abilities      Abilities[]
  skills         Skills[]
  class_features Class_Features[]
  class_paths    Class_Paths[]
  tags           Tags[]
  Characters     Characters[]
  hit_dice       Hit_Dice?        @relation(fields: [hit_DiceId], references: [id])
  hit_DiceId     String?
}

model Class_Features {
  id            String           @id @unique
  title         String?
  description   String           @db.MediumText
  xp            Int
  ticks         Int?
  tier          Int
  damage_types  Damage_Types[]
  class_paths   Class_Paths?     @relation(fields: [class_PathsId], references: [id])
  classes       Classes?         @relation(fields: [classesId], references: [id])
  class_PathsId String?
  classesId     String?
  requires      Class_Features[] @relation("class_features_prq")
  required_for  Class_Features[] @relation("class_features_prq")
  Characters    Characters[]
}

model Class_Paths {
  id             String           @id @unique
  title          String?
  description    String           @db.MediumText
  class_features Class_Features[]
  classes        Classes?         @relation(fields: [classesId], references: [id])
  classesId      String?
}

model Abilities {
  id          String        @id @unique
  title       String?
  description String        @db.MediumText
  code        String
  backgrounds Backgrounds[]
  skills      Skills[]
  classes     Classes[]
  conditions  Conditions[]
}

model Skills {
  id            String       @id @unique
  title         String?
  description   String       @db.MediumText
  abilities     Abilities?   @relation(fields: [abilitiesId], references: [id])
  backgrounds   Backgrounds?
  classes       Classes[]
  characters    Characters[]
  abilitiesId   String?
  backgroundsId String?
}

model Backgrounds {
  id                  String               @id @unique
  title               String?
  description         String               @db.MediumText
  settings            Settings?            @relation(fields: [settingsId], references: [id])
  abilities           Abilities?           @relation(fields: [abilitiesId], references: [id])
  skills              Skills?              @relation(fields: [skillsId], references: [id])
  background_features Background_Features?
  skillsId            String?              @unique
  abilitiesId         String?
  settingsId          String?
  Characters          Characters[]
}

model Settings {
  id          String        @id @unique
  title       String
  backgrounds Backgrounds[]
  description String        @db.MediumText
}

model Background_Features {
  id            String       @id @unique
  title         String
  description   String       @db.MediumText
  ticks         Int?
  backgrounds   Backgrounds? @relation(fields: [backgroundsId], references: [id])
  backgroundsId String?      @unique
}

model Injuries {
  id         String       @id @unique
  title      String
  duration   String
  health     Health[]
  conditions Conditions[]
}

model Conditions {
  id          String      @id @unique
  title       String
  description String      @db.MediumText
  abilities   Abilities[]
  injuries    Injuries[]
}
