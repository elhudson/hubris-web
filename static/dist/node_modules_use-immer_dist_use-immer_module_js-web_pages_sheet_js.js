"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkhubris_web"] = self["webpackChunkhubris_web"] || []).push([["node_modules_use-immer_dist_use-immer_module_js-web_pages_sheet_js"],{

/***/ "./node_modules/use-immer/dist/use-immer.module.js":
/*!*********************************************************!*\
  !*** ./node_modules/use-immer/dist/use-immer.module.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useImmer: () => (/* binding */ i),\n/* harmony export */   useImmerReducer: () => (/* binding */ e)\n/* harmony export */ });\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction i(f) {\n  var u = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {\n      return (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(\"function\" == typeof f ? f() : f, !0);\n    }),\n    i = u[1];\n  return [u[0], (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (t) {\n    i(\"function\" == typeof t ? (0,immer__WEBPACK_IMPORTED_MODULE_1__.produce)(t) : (0,immer__WEBPACK_IMPORTED_MODULE_1__.freeze)(t));\n  }, [])];\n}\nfunction e(n, t, o) {\n  var i = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return (0,immer__WEBPACK_IMPORTED_MODULE_1__.produce)(n);\n  }, [n]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(i, t, o);\n}\n\n\n//# sourceURL=webpack://hubris-web/./node_modules/use-immer/dist/use-immer.module.js?");

/***/ }),

/***/ "./web/pages/sheet.js":
/*!****************************!*\
  !*** ./web/pages/sheet.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sheet)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _models_character_character_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../models/character/character.js */ \"./web/models/character/character.js\");\n/* harmony import */ var _components_components_containers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/components/containers.js */ \"./web/components/components/containers.js\");\n\n\n\nasync function sheet() {\n  var char = await _models_character_character_js__WEBPACK_IMPORTED_MODULE_1__.Character.load();\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CharacterSheet, {\n    ch: char\n  });\n}\nfunction CharacterSheet({\n  ch\n}) {\n  const [char, dispatch] = (0,_models_character_character_js__WEBPACK_IMPORTED_MODULE_1__.useCharacter)(ch);\n  const patch = (0,_models_character_character_js__WEBPACK_IMPORTED_MODULE_1__.generatePatch)(dispatch);\n  console.log(char);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, char.controls(), char.header({\n    patch: patch\n  }), char.progression.display({\n    patch: patch\n  }), char.stats.display({\n    skills: char.skills\n  }), char.health.display({\n    patch: patch\n  }), char.combat.display({\n    patch: patch\n  }), char.features.display({\n    patch: patch\n  }), char.powers.display({\n    patch: patch\n  }));\n}\n\n//     return (\n//         <>\n//             <Bio ch={character} update={updateCharacter} open={expanded} />\n//             <Progression ch={ch} open={expanded} />\n//             <Health data={data} open={expanded} />\n//             <AbilityScores data={data} open={expanded} />\n//             <Combat data={data} open={expanded} />\n//             <Features data={data} open={expanded} />\n//             <Powers data={data} open={expanded} />\n//         </>\n//     )\n// }\n\n// function Bio({ ch, update, open }) {\n//     var d = {\n//         'name': ch.bio.name,\n//         'class': ch.classes[0].name,\n//         'backgrounds': ch.backgrounds[0].name + ' & ' + ch.backgrounds[1].name\n//     }\n//     var content=Object.entries(d)\n//         .map(ent => <Item label={ent[0]} content={ent[1]} />)\n//     content.push(<Alignment selected={ch.bio.aligment} editCharacter={update} />)\n//     return (<Section header={'Bio'} items={content} open={open} cls={'bio'}/>\n//     )\n// }\n\n// function Progression({ character, update, open }) {\n//     var content=[<XP spent={character.xp_spent} earned={data.character.xp_earned} update={data.manual} />,\n//                 <div>\n//                     <Tier data={data} />\n//                     <Proficiency data={data} />\n//                 </div>,\n//                 <HeroPoints ct={0} editCharacter={data.manual} />]\n//     return (\n//        <Section header={'Progression'} open={open}  items={content} cls={'progression'} />\n//     )\n// }\n\n// function Proficiency({ data }) {\n//     var tier = data.aux.tier(data.character.xp_spent)\n//     var item = { label: 'proficiency', readonly: true, id: 'proficiency', value: Number(tier) + 1 }\n//     return (<Bonus item={item} />)\n\n// }\n\n// function XP({ earned, spent, update }) {\n//     const max = useMemo(() => { return earned }, [earned])\n//     var left = { label: 'XP Spent', id: 'xp_spent', value: spent, max: max, readonly: false }\n//     var right = { label: 'XP Earned', id: 'xp_earned', value: earned, readonly: false }\n//     return (\n//         <Tracker left={left} right={right} update={update} />\n//     )\n// }\n\n// function HeroPoints({ ct, editCharacter }) {\n//     var item = { label: 'Hero Points', value: ct, id: 'hero_points', readonly: false }\n//     return (\n//         <Counter item={item} update={editCharacter} />\n//     )\n// }\n\n// function Health({ data, open }) {\n//     var hd_count = data.character.hd\n//     var hd_type = data.character.classes[0].hit_die\n//     var hd = ruleset.reference.hd.map(item => new Object({ label: item, selected: (item == hd_type) }))\n//     hd_count == undefined && (hd_count = 1)\n//     var spent = { label: 'HD Used', id: 'hd', value: 0, max: hd_count, readonly: false }\n//     var max = { label: 'HD Max', id: 'hd', value: hd_count, readonly: true }\n//     var content=[\n//         <HP aux={data.aux} spent={data.character.xp_spent} handler={data.handleChange} con={data.character.con} />,\n//         <div>\n//             <Injuries selected={data.character.injury} editCharacter={data.handleChange} />\n//             <Radio data={hd} label={'hit die'} readonly={true} />\n//         </div>,\n//         <Tracker left={spent} right={max} editCharacter={data.handleChange} />]\n//     return (\n//        <Section header={'Health'} cls={'health'} open={open} items={content} />\n//     )\n// }\n\n// function HP({ aux, spent, handler, con }) {\n//     var hp = aux.hp(spent, con)\n//     var current = { label: 'Current HP', id: 'current_hp', value: hp, max: hp, readonly: false }\n//     var max = { label: 'Max HP', id: 'max_hp', value: hp, readonly: true }\n//     return (<div className='tracker'>\n//         <Counter item={current} editCharacter={handler} />\n//         <Bonus item={max} editCharacter={handler} /></div>\n//     )\n// }\n\n// function Injuries({ selected, editCharacter }) {\n//     if (selected == null) {\n//         selected = 'uninjured'\n//     }\n//     return (\n//         <div class='box'>\n//             <Dropdown label={'injuries'} selected={selected} handler={editCharacter} data={ruleset.reference.injuries} />\n//         </div>\n//     )\n// }\n\n// function AbilityScores({ data, open }) {\n\n// }\n\n// function Stat({ score, skills, handler, xp, char }) {\n//     var item = { label: skills[0].code, value: score, id: null, readonly: true }\n//     return (<div class='stat'>\n//         <Bonus item={item} />\n//         {skills.map(skill =>\n//             <div>\n//                 <Skill skill={skill} val={score} xp={xp} char={char} handler={handler} />\n//             </div>\n//         )}\n//     </div>)\n// }\n\n// function Skill({ skill, char, handler }) {\n//     skill.proficiency(char)\n//     return (\n//         <div class=\"skill_entry\">\n//             <input type=\"checkbox\" class=\"skillprof\" disabled onChange={handler} checked={skill.proficient} id={skill.id} />\n//             <input type=\"number\" readOnly value={skill.bonus} />\n//             <label>{skill.name}</label>\n//         </div>\n//     )\n// }\n\n// function Combat({ data, open }) {\n//     var init = { value: data.character.dex, label: 'initiative', readonly: true }\n//     var atk = { value: data.character.atk({}), label: 'attack', readonly: false }\n//     var content = [\n//         <Armor character={data.character} handler={data.update} />,\n//         <Bonus item={init} />,\n//         <Weapons character={data.character} open={open} handler={data.update} />,\n//         <Bonus item={atk} />,\n//     ]\n//     return (\n//        <Section items={content} open={open}  header={'Combat'} cls={'combat'} />\n//     )\n\n// }\n\n// function Armor({ character, handler }) {\n//     var armor = character.armor\n//     if (character.armor == undefined) { armor = character.classes[0].armor_proficiencies }\n//     var mappings = {\n//         'Light': ['Light'],\n//         'Medium': ['Light', 'Medium'],\n//         'Heavy': ['Light', 'Medium', 'Heavy']\n//     }\n//     var armors = ruleset.reference.armors.map(a => new Object(\n//         {\n//             label: a,\n//             value: a,\n//             selected: a == armor,\n//             available: (mappings[character.classes[0].armor_proficiencies].includes(a))\n//         }))\n//     var ac = { label: 'AC', value: character.ac({ armor: armor }), readonly: false }\n//     return (\n//         <>\n//             <Radio data={armors} label='armor' onChange={handler} readonly={false} />\n//             <DC item={ac} />\n//         </>\n//     )\n// }\n\n// function Weapons({ character, handler }) {\n//     var wpn = character.classes[0].weapon_proficiencies\n//     var armory = [\n//         { label: 'Simple', value: '1d6' },\n//         { label: 'Martial', value: '2d6' }\n//     ]\n//     armory = armory.map(obj => new Object({\n//         ...obj,\n//         selected: (obj.label == wpn)\n//     }))\n//     return (<Radio label={'weapons'} onChange={handler} data={armory} />)\n// }\n\n// function Features({ data, open }) {\n//     var features= { \n//         'class features':data.character.class_features,\n//         'tag features': data.character.tag_features,\n//         'background features':data.character.backgrounds.map(b => new Object({ name: b.feature.split(':')[0], description: b.feature.split(\":\")[1] }))}\n//     var m=Object.entries(features).filter(a=>a[1].length>0)\n//     var s={ 'gridTemplateColumns': `repeat(${Object.keys(m).length}, ${100/Object.keys(m).length}%)` }\n//     var content=m.map(f=><FeatureGroup label={f[0]} features={f[1]} />)\n//     return(\n//         <Section style={s} items={content} cls={'features'} open={open}  header={'Features'} />\n//     )\n// }\n\n// function MetaGroup({ ranges, durations }) {\n// return(\n//     <>\n//     <FeatureGroup label={'ranges'} features={ranges} />\n//     <FeatureGroup label={'durations'} features={durations} />\n//     </>\n// )\n\n// }\n\n// function Powers({ data, open }) {\n//     var effects=<FeatureGroup label={'effects'} features={data.character.effects} header={'effects'} />\n//     var meta=<MetaGroup ranges={data.character.ranges} durations={data.character.durations} />\n//     var items=[\n//         <PowerMath ch={data.character} cls={data.character.classes[0]} xp={data.character.xp_earned} update={data.manual} />,\n//         <div class='power-options'>\n//             <Section items={effects} header={'effects'} cls={'effects'}/>\n//             <Section items={meta} header={'metadata'} cls={'meta'} />\n//             </div>\n//     ]\n//     return(<Section items={items} open={open} header={'Powers'} cls={'powers'}/>)\n// }\n\n// function PowerMath({ch, cls, xp, update}) {\n//     var bonus={value:ch.pwr({xp:xp, cls:cls}), label:'Power Mod', readonly:true}\n//     ch.powers_used==undefined ? powers_used=0 : powers_used=ch.powers_used;\n//     var used={value: powers_used, label: 'Powers Used', id:'powers_used', min:0, readonly:false}\n//     var dc={value: 10+powers_used, id:'power_dc', readonly:true, label: 'Power DC'}\n//     return(<div class='power-math'>\n//         <Bonus item={bonus} />\n//         <Counter item={used} update={update} />\n//         <DC item={dc} />\n//     </div>)\n// }\n\n//# sourceURL=webpack://hubris-web/./web/pages/sheet.js?");

/***/ })

}]);